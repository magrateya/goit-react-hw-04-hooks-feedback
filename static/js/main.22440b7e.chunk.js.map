{"version":3,"sources":["components/FeedbackOptions/Feedbackoption.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","labels","Object","keys","className","s","container","map","label","onClick","slice","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","list","Section","title","children","section","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","state","option","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,UAAY,oC,gBCA9BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,qICGb,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3CC,EAASC,OAAOC,KAAKJ,GAE3B,OACE,qBAAKK,UAAWC,IAAEC,UAAlB,SACGL,EAAOM,KAAI,SAAAC,GAAK,OACf,wBAAoBC,QAAS,kBAAMT,EAAgBQ,IAAnD,SACGA,EAAME,MAAM,EAAG,GAAGC,cAAgBH,EAAME,MAAM,IADpCF,Q,oBCWNI,EAjBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIb,UAAWC,IAAEa,KAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,Y,gBCNW,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKjB,UAAWC,IAAEiB,QAAlB,UACE,6BAAKF,IACJC,KCLQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICEE,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBb,EADqB,KACfc,EADe,OAEED,mBAAS,GAFX,mBAErBZ,EAFqB,KAEZc,EAFY,OAGNF,mBAAS,GAHH,mBAGrBX,EAHqB,KAGhBc,EAHgB,KAqBtBC,EAAqB,WACzB,OAAOjB,EAAOC,EAAUC,GAOpBgB,EAAQ,CACZlB,OACAC,UACAC,OAGF,OACE,qCACE,cAACI,EAAD,CAASC,MAAM,wBAAf,SACE,cAACtB,EAAD,CAAiBC,QAASgC,EAAO/B,gBAjCnB,SAAAgC,GAClB,OAAQA,GACN,IAAK,OACHL,GAAQ,SAAAI,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHH,GAAW,SAAAG,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHF,GAAO,SAAAE,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAwBF,cAACZ,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzBU,IACC,cAACP,EAAD,CAAcC,QAAQ,sBAEtB,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBA1B8B,WACtC,IAAMD,EAAQc,IACd,OAAOd,GAASiB,KAAKC,MAAc,IAAPrB,EAAcG,GAwBdmB,UCnDhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.22440b7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedbackoption_container__3CJs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__QmrJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1yInh\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Feedbackoption.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  const labels = Object.keys(options);\n\n  return (\n    <div className={s.container}>\n      {labels.map(label => (\n        <button key={label} onClick={() => onLeaveFeedback(label)}>\n          {label.slice(0, 1).toUpperCase() + label.slice(1)}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={s.list}>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage} %</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = option => {\n    switch (option) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total && Math.round((good * 100) / total);\n  };\n\n  const state = {\n    good,\n    neutral,\n    bad,\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={state} onLeaveFeedback={handleClick} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}